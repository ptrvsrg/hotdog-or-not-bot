version: '3'

volumes:
  postgres-data:

networks:
  hotdog-or-not-net:

services:
  postgres:
    image: postgres:alpine3.20
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-hotdog_or_not_bot}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - hotdog-or-not-net
  redis:
    image: redis:7.0.15-alpine3.20
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - ${REDIS_PORT:-6379}:6379
    networks:
      - hotdog-or-not-net
  bot:
    image: ptrvsrg/hotdog-or-not-bot:latest
    restart: always
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - OWNER_USERNAME=${OWNER_USERNAME}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - YANDEX_DISK_API_KEY=${YANDEX_DISK_API_KEY}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-hotdog_or_not_bot}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_USER=default
      - REDIS_PASSWORD=${REDIS_PASSWORD:-password}
      - REDIS_DB=0
    ports:
      - ${BOT_PORT:-8080}:8080
    networks:
      - hotdog-or-not-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy